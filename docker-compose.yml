version: '3.8'

services:
  # 数据库服务
  mysql:
    image: mysql:8.0
    container_name: chat-mysql
    ports:
      - "13306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - chat-network
    # 资源限制
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  mongodb:
    image: mongo:5.0
    container_name: chat-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb-data:/data/db
    networks:
      - chat-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # RabbitMQ服务
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: chat-rabbitmq
    ports:
      - "5672:5672"      # AMQP端口
      - "15672:15672"    # 管理界面端口
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - chat-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # 服务注册中心
  eureka-server:
    build: 
      context: .
      dockerfile: ./eureka-server/Dockerfile
      cache_from:
        - chat-app/eureka-server:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: chat-app/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - chat-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # 用户服务
  user-service:
    build:
      context: .
      dockerfile: ./user-service/Dockerfile
      cache_from:
        - chat-app/user-service:latest
      args:
        BUILDKIT_INLINE_CACHE: 1
    image: chat-app/user-service:latest
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/chat_user_db?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - JWT_SECRET=myVeryVerySecretKeyThatNeedsToBeAtLeast32CharactersLongForHS512Algorithm
      - JWT_EXPIRATION=86400000
      - JAVA_OPTS=-Xmx1024m -Xms512m
    depends_on:
      - mysql
      - eureka-server
    networks:
      - chat-network
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 768M

  # 关系服务
  relationship-service:
    build:
      context: .
      dockerfile: ./relationship-service/Dockerfile
    container_name: relationship-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/chat_relationship_db?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - mysql
      - eureka-server
    networks:
      - chat-network

  # 消息服务
  message-service:
    build:
      context: .
      dockerfile: ./message-service/Dockerfile
    container_name: message-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://root:password@mongodb:27017/chat_message_db?authSource=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - mongodb
      - rabbitmq
      - eureka-server
    networks:
      - chat-network

  # 通知服务
  notification-service:
    build:
      context: .
      dockerfile: ./notification-service/Dockerfile
    container_name: notification-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=chat_notification_db
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=password
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=password
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - mongodb
      - rabbitmq
      - eureka-server
    networks:
      - chat-network

  # API网关
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - user-service
      - relationship-service
      - message-service
      - notification-service
    networks:
      - chat-network

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: frontend
    ports:
      - "8090:8090"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    depends_on:
      - eureka-server
      - api-gateway
      - user-service
      - relationship-service
      - message-service
      - notification-service
    networks:
      - chat-network

# 定义网络
networks:
  chat-network:
    driver: bridge

# 定义数据卷
volumes:
  mysql-data:
  mongodb-data:
  rabbitmq-data: 